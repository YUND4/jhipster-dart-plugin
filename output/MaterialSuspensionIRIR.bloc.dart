class MaterialSuspensionIRBlocIR with Validators implements BlocBase { 
  final listenConection = ConnectionStatusSingleton.getInstance();
  final _materialsuspensionirListController = BehaviorSubject<MaterialSuspensionIRModelIR>();  final _transmittedToServerController = BehaviorSubject<bool>();  final _firmaController = BehaviorSubject<String>();  final _ultimaSincronizacionController = BehaviorSubject<DateTime>();  final _realizadoController = BehaviorSubject<bool>();  final _tipoPredioController = BehaviorSubject<String>();  final _funcionarioIdController = BehaviorSubject<int>();  final _funcionarioNombreController = BehaviorSubject<String>();  final _createdByController = BehaviorSubject<String>();  final _createdDateController = BehaviorSubject<DateTime>();  final _lastModifiedByController = BehaviorSubject<String>();  final _lastModifiedDateController = BehaviorSubject<DateTime>();  final _idController = BehaviorSubject<int>();  final _cantidadController = BehaviorSubject<int>();  final _accionController = BehaviorSubject<int>();  final _propiedadController = BehaviorSubject<int>();  final _suspensionIdController = BehaviorSubject<int>();  final _materialRetiradoIdController = BehaviorSubject<int>();  final _materialRetiradoNombreController = BehaviorSubject<String>();  final _transmittedToMovilController = BehaviorSubject<bool>();  final _idController = BehaviorSubject<int>();  final _idRemotoController = BehaviorSubject<int>();  final _imagenesSyncController = BehaviorSubject<bool>();  final _guardadoLocalController = BehaviorSubject<bool>();  Stream<bool> get transmittedToServerStream => _transmittedToServerController.stream;  Stream<String> get firmaStream => _firmaController.stream;  Stream<DateTime> get ultimaSincronizacionStream => _ultimaSincronizacionController.stream;  Stream<bool> get realizadoStream => _realizadoController.stream;  Stream<String> get tipoPredioStream => _tipoPredioController.stream;  Stream<int> get funcionarioIdStream => _funcionarioIdController.stream;  Stream<String> get funcionarioNombreStream => _funcionarioNombreController.stream;  Stream<String> get createdByStream => _createdByController.stream;  Stream<DateTime> get createdDateStream => _createdDateController.stream;  Stream<String> get lastModifiedByStream => _lastModifiedByController.stream;  Stream<DateTime> get lastModifiedDateStream => _lastModifiedDateController.stream;  Stream<int> get idStream => _idController.stream;  Stream<int> get cantidadStream => _cantidadController.stream;  Stream<int> get accionStream => _accionController.stream;  Stream<int> get propiedadStream => _propiedadController.stream;  Stream<int> get suspensionIdStream => _suspensionIdController.stream;  Stream<int> get materialRetiradoIdStream => _materialRetiradoIdController.stream;  Stream<String> get materialRetiradoNombreStream => _materialRetiradoNombreController.stream;  Stream<bool> get transmittedToMovilStream => _transmittedToMovilController.stream;  Stream<int> get idStream => _idController.stream;  Stream<int> get idRemotoStream => _idRemotoController.stream;  Stream<bool> get imagenesSyncStream => _imagenesSyncController.stream;  Stream<bool> get guardadoLocalStream => _guardadoLocalController.stream;  Stream<dynamic> get formValidStream => Observable.combineLatest([    transmittedToServerStream,    firmaStream,    ultimaSincronizacionStream,    realizadoStream,    tipoPredioStream,    funcionarioIdStream,    funcionarioNombreStream,    createdByStream,    createdDateStream,    lastModifiedByStream,    lastModifiedDateStream,    idStream,    cantidadStream,    accionStream,    propiedadStream,    suspensionIdStream,    materialRetiradoIdStream,    materialRetiradoNombreStream,    transmittedToMovilStream,    idStream,    idRemotoStream,    imagenesSyncStream,    guardadoLocalStream  ], (a) => a);
  Function(MaterialSuspensionIRModelIR) get reconexionSink => _materialsuspensionirListController.sink.add;  Function(bool) get transmittedToServerSink => _transmittedToServerController.sink.add;  Function(String) get firmaSink => _firmaController.sink.add;  Function(DateTime) get ultimaSincronizacionSink => _ultimaSincronizacionController.sink.add;  Function(bool) get realizadoSink => _realizadoController.sink.add;  Function(String) get tipoPredioSink => _tipoPredioController.sink.add;  Function(int) get funcionarioIdSink => _funcionarioIdController.sink.add;  Function(String) get funcionarioNombreSink => _funcionarioNombreController.sink.add;  Function(String) get createdBySink => _createdByController.sink.add;  Function(DateTime) get createdDateSink => _createdDateController.sink.add;  Function(String) get lastModifiedBySink => _lastModifiedByController.sink.add;  Function(DateTime) get lastModifiedDateSink => _lastModifiedDateController.sink.add;  Function(int) get idSink => _idController.sink.add;  Function(int) get cantidadSink => _cantidadController.sink.add;  Function(int) get accionSink => _accionController.sink.add;  Function(int) get propiedadSink => _propiedadController.sink.add;  Function(int) get suspensionIdSink => _suspensionIdController.sink.add;  Function(int) get materialRetiradoIdSink => _materialRetiradoIdController.sink.add;  Function(String) get materialRetiradoNombreSink => _materialRetiradoNombreController.sink.add;  Function(bool) get transmittedToMovilSink => _transmittedToMovilController.sink.add;  Function(int) get idSink => _idController.sink.add;  Function(int) get idRemotoSink => _idRemotoController.sink.add;  Function(bool) get imagenesSyncSink => _imagenesSyncController.sink.add;  Function(bool) get guardadoLocalSink => _guardadoLocalController.sink.add;  MaterialSuspensionIRModelIR get MaterialSuspensionIRModelIRValue => _materialsuspensionirListController.value;  int get idValue => _idController.value;  bool get transmittedToServerValue => _transmittedToServerController.value;  String get firmaValue => _firmaController.value;  DateTime get ultimaSincronizacionValue => _ultimaSincronizacionController.value;  bool get realizadoValue => _realizadoController.value;  String get tipoPredioValue => _tipoPredioController.value;  int get funcionarioIdValue => _funcionarioIdController.value;  String get funcionarioNombreValue => _funcionarioNombreController.value;  String get createdByValue => _createdByController.value;  DateTime get createdDateValue => _createdDateController.value;  String get lastModifiedByValue => _lastModifiedByController.value;  DateTime get lastModifiedDateValue => _lastModifiedDateController.value;  int get idValue => _idController.value;  int get cantidadValue => _cantidadController.value;  int get accionValue => _accionController.value;  int get propiedadValue => _propiedadController.value;  int get suspensionIdValue => _suspensionIdController.value;  int get materialRetiradoIdValue => _materialRetiradoIdController.value;  String get materialRetiradoNombreValue => _materialRetiradoNombreController.value;  bool get transmittedToMovilValue => _transmittedToMovilController.value;  int get idValue => _idController.value;  int get idRemotoValue => _idRemotoController.value;  bool get imagenesSyncValue => _imagenesSyncController.value;  bool get guardadoLocalValue => _guardadoLocalController.value;  void setModel(MaterialSuspensionIRModelIR model) {    transmittedToServerSink(model.transmittedToServer);    firmaSink(model.firma);    ultimaSincronizacionSink(model.ultimaSincronizacion);    realizadoSink(model.realizado);    tipoPredioSink(model.tipoPredio);    funcionarioIdSink(model.funcionarioId);    funcionarioNombreSink(model.funcionarioNombre);    createdBySink(model.createdBy);    createdDateSink(model.createdDate);    lastModifiedBySink(model.lastModifiedBy);    lastModifiedDateSink(model.lastModifiedDate);    idSink(model.id);    cantidadSink(model.cantidad);    accionSink(model.accion);    propiedadSink(model.propiedad);    suspensionIdSink(model.suspensionId);    materialRetiradoIdSink(model.materialRetiradoId);    materialRetiradoNombreSink(model.materialRetiradoNombre);    transmittedToMovilSink(model.transmittedToMovil);    idSink(model.id);    idRemotoSink(model.idRemoto);    imagenesSyncSink(model.imagenesSync);    guardadoLocalSink(model.guardadoLocal);  }  MaterialSuspensionIRModelIR getModel() {    return MaterialSuspensionIRModelIR(      transmittedToServer: transmittedToServerValue,      firma: firmaValue,      ultimaSincronizacion: ultimaSincronizacionValue,      realizado: realizadoValue,      tipoPredio: tipoPredioValue,      funcionarioId: funcionarioIdValue,      funcionarioNombre: funcionarioNombreValue,      createdBy: createdByValue,      createdDate: createdDateValue,      lastModifiedBy: lastModifiedByValue,      lastModifiedDate: lastModifiedDateValue,      id: idValue,      cantidad: cantidadValue,      accion: accionValue,      propiedad: propiedadValue,      suspensionId: suspensionIdValue,      materialRetiradoId: materialRetiradoIdValue,      materialRetiradoNombre: materialRetiradoNombreValue,      transmittedToMovil: transmittedToMovilValue,      id: idValue,      idRemoto: idRemotoValue,      imagenesSync: imagenesSyncValue,      guardadoLocal: guardadoLocalValue    );  }  dispose() {    _transmittedToServerController?.close();    _firmaController?.close();    _ultimaSincronizacionController?.close();    _realizadoController?.close();    _tipoPredioController?.close();    _funcionarioIdController?.close();    _funcionarioNombreController?.close();    _createdByController?.close();    _createdDateController?.close();    _lastModifiedByController?.close();    _lastModifiedDateController?.close();    _idController?.close();    _cantidadController?.close();    _accionController?.close();    _propiedadController?.close();    _suspensionIdController?.close();    _materialRetiradoIdController?.close();    _materialRetiradoNombreController?.close();    _transmittedToMovilController?.close();    _idController?.close();    _idRemotoController?.close();    _imagenesSyncController?.close();    _guardadoLocalController?.close();  }}