class ReconexionBlocIR with Validators implements BlocBase { 
  final listenConection = ConnectionStatusSingleton.getInstance();
  final _reconexionListController = BehaviorSubject<ReconexionModelIR>();  final _idController = BehaviorSubject<int>();
  final _idRemotoController = BehaviorSubject<int>();
  final _fechaGeneradoController = BehaviorSubject<DateTime>;  final _montoPagadoController = BehaviorSubject<int>;  final _selloRemovidoController = BehaviorSubject<String>;  final _selloInstaladoController = BehaviorSubject<String>;  final _fechaReconexionController = BehaviorSubject<DateTime>;  final _reconectadoController = BehaviorSubject<bool>;  final _reconectadoEnController = BehaviorSubject<int>;  final _fechaPagoController = BehaviorSubject<DateTime>;  final _causaReconexionController = BehaviorSubject<int>;  final _tipoComentarioController = BehaviorSubject<int>;  final _comentariosController = BehaviorSubject<String>;  final _nombreClienteController = BehaviorSubject<String>;  final _servicioController = BehaviorSubject<bool>;  final _direccionController = BehaviorSubject<String>;  final _cuentaController = BehaviorSubject<int>;  final _rutaController = BehaviorSubject<int>;  final _municipioController = BehaviorSubject<int>;  final _zonaController = BehaviorSubject<String>;  final _tipoPredioController = BehaviorSubject<String>;  final _estadoIdController = BehaviorSubject<int>;  final _cicloController = BehaviorSubject<Integer>;  final _longitudController = BehaviorSubject<Double>;  final _latitudController = BehaviorSubject<Double>;  final _tipoObservacionController = BehaviorSubject<int>;  final _contadorController = BehaviorSubject<String>;  final _telefonoController = BehaviorSubject<String>;  final _celularController = BehaviorSubject<String>;  final _identificacionController = BehaviorSubject<String>;  final _idController = BehaviorSubject<int>;  final _idRemotoController = BehaviorSubject<int>;  final _imagenesSyncController = BehaviorSubject<bool>;  final _guardadoLocalController = BehaviorSubject<bool>;  Stream<int> get idStream => _idController.stream;  Stream<DateTime> get fechaGeneradoStream => _fechaGeneradoController.stream;  Stream<int> get montoPagadoStream => _montoPagadoController.stream;  Stream<String> get selloRemovidoStream => _selloRemovidoController.stream;  Stream<String> get selloInstaladoStream => _selloInstaladoController.stream;  Stream<DateTime> get fechaReconexionStream => _fechaReconexionController.stream;  Stream<bool> get reconectadoStream => _reconectadoController.stream;  Stream<int> get reconectadoEnStream => _reconectadoEnController.stream;  Stream<DateTime> get fechaPagoStream => _fechaPagoController.stream;  Stream<int> get causaReconexionStream => _causaReconexionController.stream;  Stream<int> get tipoComentarioStream => _tipoComentarioController.stream;  Stream<String> get comentariosStream => _comentariosController.stream;  Stream<String> get nombreClienteStream => _nombreClienteController.stream;  Stream<bool> get servicioStream => _servicioController.stream;  Stream<String> get direccionStream => _direccionController.stream;  Stream<int> get cuentaStream => _cuentaController.stream;  Stream<int> get rutaStream => _rutaController.stream;  Stream<int> get municipioStream => _municipioController.stream;  Stream<String> get zonaStream => _zonaController.stream;  Stream<String> get tipoPredioStream => _tipoPredioController.stream;  Stream<int> get estadoIdStream => _estadoIdController.stream;  Stream<Integer> get cicloStream => _cicloController.stream;  Stream<Double> get longitudStream => _longitudController.stream;  Stream<Double> get latitudStream => _latitudController.stream;  Stream<int> get tipoObservacionStream => _tipoObservacionController.stream;  Stream<String> get contadorStream => _contadorController.stream;  Stream<String> get telefonoStream => _telefonoController.stream;  Stream<String> get celularStream => _celularController.stream;  Stream<String> get identificacionStream => _identificacionController.stream;  Stream<int> get idStream => _idController.stream;  Stream<int> get idRemotoStream => _idRemotoController.stream;  Stream<bool> get imagenesSyncStream => _imagenesSyncController.stream;  Stream<bool> get guardadoLocalStream => _guardadoLocalController.stream;  Stream<dynamic> get formValidStream => Observable.combineLatest([    fechaGeneradoStream,    montoPagadoStream,    selloRemovidoStream,    selloInstaladoStream,    fechaReconexionStream,    reconectadoStream,    reconectadoEnStream,    fechaPagoStream,    causaReconexionStream,    tipoComentarioStream,    comentariosStream,    nombreClienteStream,    servicioStream,    direccionStream,    cuentaStream,    rutaStream,    municipioStream,    zonaStream,    tipoPredioStream,    estadoIdStream,    cicloStream,    longitudStream,    latitudStream,    tipoObservacionStream,    contadorStream,    telefonoStream,    celularStream,    identificacionStream,    idStream,    idRemotoStream,    imagenesSyncStream,    guardadoLocalStream  ], (a) => a);
  Function(ReconexionModelIR) get reconexionSink => _reconexionListController.sink.add;  Function(int) get idSink => _idController.sink.add;  Function(int) get idRemotoSink => _idRemotoController.sink.add;  Function(DateTime) get fechaGeneradoSink => _fechaGeneradoController.sink.add;  Function(int) get montoPagadoSink => _montoPagadoController.sink.add;  Function(String) get selloRemovidoSink => _selloRemovidoController.sink.add;  Function(String) get selloInstaladoSink => _selloInstaladoController.sink.add;  Function(DateTime) get fechaReconexionSink => _fechaReconexionController.sink.add;  Function(bool) get reconectadoSink => _reconectadoController.sink.add;  Function(int) get reconectadoEnSink => _reconectadoEnController.sink.add;  Function(DateTime) get fechaPagoSink => _fechaPagoController.sink.add;  Function(int) get causaReconexionSink => _causaReconexionController.sink.add;  Function(int) get tipoComentarioSink => _tipoComentarioController.sink.add;  Function(String) get comentariosSink => _comentariosController.sink.add;  Function(String) get nombreClienteSink => _nombreClienteController.sink.add;  Function(bool) get servicioSink => _servicioController.sink.add;  Function(String) get direccionSink => _direccionController.sink.add;  Function(int) get cuentaSink => _cuentaController.sink.add;  Function(int) get rutaSink => _rutaController.sink.add;  Function(int) get municipioSink => _municipioController.sink.add;  Function(String) get zonaSink => _zonaController.sink.add;  Function(String) get tipoPredioSink => _tipoPredioController.sink.add;  Function(int) get estadoIdSink => _estadoIdController.sink.add;  Function(Integer) get cicloSink => _cicloController.sink.add;  Function(Double) get longitudSink => _longitudController.sink.add;  Function(Double) get latitudSink => _latitudController.sink.add;  Function(int) get tipoObservacionSink => _tipoObservacionController.sink.add;  Function(String) get contadorSink => _contadorController.sink.add;  Function(String) get telefonoSink => _telefonoController.sink.add;  Function(String) get celularSink => _celularController.sink.add;  Function(String) get identificacionSink => _identificacionController.sink.add;  Function(int) get idSink => _idController.sink.add;  Function(int) get idRemotoSink => _idRemotoController.sink.add;  Function(bool) get imagenesSyncSink => _imagenesSyncController.sink.add;  Function(bool) get guardadoLocalSink => _guardadoLocalController.sink.add;  ReconexionModelIR get ReconexionModelIRValue => _reconexionListController.value;  int get idValue => _idController.value;  DateTime get fechaGeneradoValue => _fechaGeneradoController.value;  int get montoPagadoValue => _montoPagadoController.value;  String get selloRemovidoValue => _selloRemovidoController.value;  String get selloInstaladoValue => _selloInstaladoController.value;  DateTime get fechaReconexionValue => _fechaReconexionController.value;  bool get reconectadoValue => _reconectadoController.value;  int get reconectadoEnValue => _reconectadoEnController.value;  DateTime get fechaPagoValue => _fechaPagoController.value;  int get causaReconexionValue => _causaReconexionController.value;  int get tipoComentarioValue => _tipoComentarioController.value;  String get comentariosValue => _comentariosController.value;  String get nombreClienteValue => _nombreClienteController.value;  bool get servicioValue => _servicioController.value;  String get direccionValue => _direccionController.value;  int get cuentaValue => _cuentaController.value;  int get rutaValue => _rutaController.value;  int get municipioValue => _municipioController.value;  String get zonaValue => _zonaController.value;  String get tipoPredioValue => _tipoPredioController.value;  int get estadoIdValue => _estadoIdController.value;  Integer get cicloValue => _cicloController.value;  Double get longitudValue => _longitudController.value;  Double get latitudValue => _latitudController.value;  int get tipoObservacionValue => _tipoObservacionController.value;  String get contadorValue => _contadorController.value;  String get telefonoValue => _telefonoController.value;  String get celularValue => _celularController.value;  String get identificacionValue => _identificacionController.value;  int get idValue => _idController.value;  int get idRemotoValue => _idRemotoController.value;  bool get imagenesSyncValue => _imagenesSyncController.value;  bool get guardadoLocalValue => _guardadoLocalController.value;  void setModel(ReconexionModelIR model) {    idSink(model.id);    idRemotoSink(model.idRemoto);    fechaGeneradoSink(model.fechaGenerado);    montoPagadoSink(model.montoPagado);    selloRemovidoSink(model.selloRemovido);    selloInstaladoSink(model.selloInstalado);    fechaReconexionSink(model.fechaReconexion);    reconectadoSink(model.reconectado);    reconectadoEnSink(model.reconectadoEn);    fechaPagoSink(model.fechaPago);    causaReconexionSink(model.causaReconexion);    tipoComentarioSink(model.tipoComentario);    comentariosSink(model.comentarios);    nombreClienteSink(model.nombreCliente);    servicioSink(model.servicio);    direccionSink(model.direccion);    cuentaSink(model.cuenta);    rutaSink(model.ruta);    municipioSink(model.municipio);    zonaSink(model.zona);    tipoPredioSink(model.tipoPredio);    estadoIdSink(model.estadoId);    cicloSink(model.ciclo);    longitudSink(model.longitud);    latitudSink(model.latitud);    tipoObservacionSink(model.tipoObservacion);    contadorSink(model.contador);    telefonoSink(model.telefono);    celularSink(model.celular);    identificacionSink(model.identificacion);    idSink(model.id);    idRemotoSink(model.idRemoto);    imagenesSyncSink(model.imagenesSync);    guardadoLocalSink(model.guardadoLocal);  }  ReconexionModelIR getModel() {    return ReconexionModelIR(      fechaGenerado: fechaGeneradoValue,      montoPagado: montoPagadoValue,      selloRemovido: selloRemovidoValue,      selloInstalado: selloInstaladoValue,      fechaReconexion: fechaReconexionValue,      reconectado: reconectadoValue,      reconectadoEn: reconectadoEnValue,      fechaPago: fechaPagoValue,      causaReconexion: causaReconexionValue,      tipoComentario: tipoComentarioValue,      comentarios: comentariosValue,      nombreCliente: nombreClienteValue,      servicio: servicioValue,      direccion: direccionValue,      cuenta: cuentaValue,      ruta: rutaValue,      municipio: municipioValue,      zona: zonaValue,      tipoPredio: tipoPredioValue,      estadoId: estadoIdValue,      ciclo: cicloValue,      longitud: longitudValue,      latitud: latitudValue,      tipoObservacion: tipoObservacionValue,      contador: contadorValue,      telefono: telefonoValue,      celular: celularValue,      identificacion: identificacionValue,      id: idValue,      idRemoto: idRemotoValue,      imagenesSync: imagenesSyncValue,      guardadoLocal: guardadoLocalValue    );  }  dispose() {    _fechaGeneradoController?.close();    _montoPagadoController?.close();    _selloRemovidoController?.close();    _selloInstaladoController?.close();    _fechaReconexionController?.close();    _reconectadoController?.close();    _reconectadoEnController?.close();    _fechaPagoController?.close();    _causaReconexionController?.close();    _tipoComentarioController?.close();    _comentariosController?.close();    _nombreClienteController?.close();    _servicioController?.close();    _direccionController?.close();    _cuentaController?.close();    _rutaController?.close();    _municipioController?.close();    _zonaController?.close();    _tipoPredioController?.close();    _estadoIdController?.close();    _cicloController?.close();    _longitudController?.close();    _latitudController?.close();    _tipoObservacionController?.close();    _contadorController?.close();    _telefonoController?.close();    _celularController?.close();    _identificacionController?.close();    _idController?.close();    _idRemotoController?.close();    _imagenesSyncController?.close();    _guardadoLocalController?.close();  }}